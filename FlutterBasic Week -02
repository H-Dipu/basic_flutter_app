//adb tcpip 5555
//adb connect 192.98.1.166

import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(debugShowCheckedModeBanner: false, home: HomeActivity());
  }
}

class HomeActivity extends StatelessWidget {
  HomeActivity({super.key});

  // ignore: non_constant_identifier_names
  MySnackBar(message, context) {
    return ScaffoldMessenger.of(context)
        .showSnackBar(SnackBar(content: Text(message)));
  }

  // ignore: non_constant_identifier_names
  MyAlertBox(context) {
    return showDialog(
        context: context,
        builder: (BuildContext context) {
          return Expanded(
              child: AlertDialog(
            title: const Text("Alert!!"),
            content: const Text("Do you want to Delete"),
            actions: [
              TextButton(
                  onPressed: () {
                    MySnackBar("Delete Successfully", context);
                    Navigator.of(context).pop();
                  },
                  child: const Text("Yes")),
              TextButton(
                  onPressed: () {
                    Navigator.of(context).pop();
                  },
                  child: const Text("No"))
            ],
          ));
        });
  }

  // ignore: non_constant_identifier_names
  var MyItems = [
    {"img": "https://shorturl.at/muNT4", "title": "Dipu"},
    {"img": "https://shorturl.at/CVW08", "title": "Al-amin"},
    {"img": "https://shorturl.at/efL48", "title": "Rasel"},
    {"img": "https://shorturl.at/yDIP8", "title": "Antor"},
    {"img": "https://rb.gy/sf592", "title": "Munna"},
    {"img": "https://shorturl.at/uzL27", "title": "Rashed"},
    {"img": "https://shorturl.at/muNT4", "title": "Dipu"},
    {"img": "https://shorturl.at/CVW08", "title": "Al-amin"},
    {"img": "https://shorturl.at/efL48", "title": "Rasel"},
    {"img": "https://shorturl.at/yDIP8", "title": "Antor"},
    {"img": "https://rb.gy/sf592", "title": "Munna"},
    {"img": "https://shorturl.at/uzL27", "title": "Rashed"},
    {"img": "https://shorturl.at/muNT4", "title": "Dipu"},
    {"img": "https://shorturl.at/CVW08", "title": "Al-amin"},
    {"img": "https://shorturl.at/efL48", "title": "Rasel"},
    {"img": "https://shorturl.at/yDIP8", "title": "Antor"},
    {"img": "https://rb.gy/sf592", "title": "Munna"},
    {"img": "https://shorturl.at/uzL27", "title": "Rashed"},
    {"img": "https://shorturl.at/muNT4", "title": "Dipu"},
    {"img": "https://shorturl.at/CVW08", "title": "Al-amin"},
    {"img": "https://shorturl.at/efL48", "title": "Rasel"},
    {"img": "https://shorturl.at/yDIP8", "title": "Antor"},
    {"img": "https://rb.gy/sf592", "title": "Munna"},
    {"img": "https://shorturl.at/uzL27", "title": "Rashed"},
  ];

  @override
  Widget build(BuildContext context) {
    ButtonStyle buttonStyle = ElevatedButton.styleFrom(
        padding: const EdgeInsets.all(20),
        backgroundColor: Colors.blueGrey,
        foregroundColor: Colors.white,
        shape: const RoundedRectangleBorder(
            borderRadius: BorderRadius.all(Radius.circular(30))),
        minimumSize: Size(double.infinity, 50));

    return Scaffold(
        appBar: AppBar(
          title: const Text("My App"),
          // centerTitle: true,
          titleSpacing: 20,
          elevation: 0,
          toolbarHeight: 50,
          toolbarOpacity: 1,
          backgroundColor: const Color(0xFF006064),
          actions: [
            IconButton(
                onPressed: () {
                  MySnackBar("Search Button is clicked", context);
                },
                icon: const Icon(Icons.search)),
            IconButton(
                onPressed: () {
                  MySnackBar("message Button is clicked", context);
                },
                icon: const Icon(Icons.message)),
            IconButton(
                onPressed: () {
                  MySnackBar("comment Button is clicked", context);
                },
                icon: const Icon(Icons.comment)),
            IconButton(
                onPressed: () {
                  MySnackBar("email Button is clicked", context);
                },
                icon: const Icon(Icons.email)),
            IconButton(
                onPressed: () {
                  MySnackBar("settings Button is clicked", context);
                },
                icon: const Icon(Icons.settings))
          ],
        ),
        floatingActionButton: FloatingActionButton(
            elevation: 10,
            child: const Icon(Icons.add_home_outlined),
            onPressed: () {
              MySnackBar("Go Home ", context);
            }),
        bottomNavigationBar: BottomNavigationBar(
          currentIndex: 2,
          items: const [
            BottomNavigationBarItem(icon: Icon(Icons.home), label: "Home"),
            BottomNavigationBarItem(
                icon: Icon(Icons.message), label: "Contact"),
            BottomNavigationBarItem(icon: Icon(Icons.person), label: "Profile"),
          ],
          onTap: (int index) {
            if (index == 0) {
              MySnackBar("Home Index", context);
            }

            if (index == 1) {
              MySnackBar("Contact Index", context);
            }
            if (index == 2) {
              MySnackBar("Profile Index", context);
            }
          },
        ),
        drawer: Drawer(
          // Add a ListView to the drawer. This ensures the user can scroll
          // through the options in the drawer if there isn't enough vertical
          // space to fit everything.
          child: ListView(
            // Important: Remove any padding from the ListView.
            padding: EdgeInsets.zero,
            children: [
              DrawerHeader(
                padding: const EdgeInsets.all(0),
                child: UserAccountsDrawerHeader(
                    decoration: const BoxDecoration(color: Colors.black),
                    accountName: const Text("Md. Hasanuzzaman Dipu"),
                    accountEmail: const Text("hdipu2646@gmail.com"),
                    currentAccountPicture: Image.network(
                        "https://media.licdn.com/dms/image/D5603AQGZK_9Zsxl6Lg/profile-displayphoto-shrink_800_800/0/1674109876317?e=1697673600&v=beta&t=m9npKb8UFrMrHNmJNWEer_x43ysCzid35hvaFXG1-i0")),
              ),
              ListTile(
                leading: const Icon(Icons.home),
                title: const Text('Home'),
                onTap: () {
                  MySnackBar("Home Index", context);
                  Navigator.pop(context);
                },
              ),
              ListTile(
                leading: Icon(Icons.person),
                title: const Text('Item 2'),
                onTap: () {
                  MySnackBar("Home Index", context);
                  Navigator.pop(context);
                },
              ),
            ],
          ),
        ),
        endDrawer: Drawer(
          // Add a ListView to the drawer. This ensures the user can scroll
          // through the options in the drawer if there isn't enough vertical
          // space to fit everything.
          child: ListView(
            // Important: Remove any padding from the ListView.
            padding: EdgeInsets.zero,
            children: [
              DrawerHeader(
                padding: const EdgeInsets.all(0),
                child: UserAccountsDrawerHeader(
                    decoration: const BoxDecoration(color: Colors.black),
                    accountName: const Text("Md. Hasanuzzaman Dipu"),
                    accountEmail: const Text("hdipu2646@gmail.com"),
                    currentAccountPicture: Image.network(
                        "https://media.licdn.com/dms/image/D5603AQGZK_9Zsxl6Lg/profile-displayphoto-shrink_800_800/0/1674109876317?e=1697673600&v=beta&t=m9npKb8UFrMrHNmJNWEer_x43ysCzid35hvaFXG1-i0")),
              ),
              ListTile(
                leading: const Icon(Icons.home),
                title: const Text('Home'),
                onTap: () {
                  MySnackBar("Home Index", context);
                  Navigator.pop(context);
                },
              ),
              ListTile(
                leading: Icon(Icons.person),
                title: const Text('Item 2'),
                onTap: () {
                  MySnackBar("Home Index", context);
                  Navigator.pop(context);
                },
              ),
            ],
          ),
        ),
        body: GridView.builder(
            gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                crossAxisSpacing: 0,
                mainAxisSpacing: 0,
                crossAxisCount: 3,
                childAspectRatio: 1.2),
            //ListView.builder(
            itemCount: MyItems.length,
            itemBuilder: (context, index) {
              return GestureDetector(
                onTap: () {
                  MyAlertBox(context);

                  MySnackBar(MyItems[index]["title"], context);
                },
                child: Container(
                  margin: EdgeInsets.all(8),
                  width: double.infinity,
                  height: 200,
                  child: Image.network(
                    MyItems[index]["img"]!,
                    fit: BoxFit.fill,
                  ),
                ),
              );
            })

        /*
        Column(
          mainAxisAlignment: MainAxisAlignment.start,
          children: [
            const Padding(
              padding: EdgeInsets.all(10),
              child: TextField(
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "First Name",
                ),
              ),
            ),
            const Padding(
              padding: EdgeInsets.all(10),
              child: TextField(
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Last Name",
                ),
              ),
            ),
            const Padding(
              padding: EdgeInsets.all(10),
              child: TextField(
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Email",
                ),
              ),
            ),
            Padding(
              padding: const EdgeInsets.all(10),
              child: ElevatedButton(
                onPressed: () {},
                child: const Text("Submite"),
                style: buttonStyle,
              ),
            ),
          ],
        ),
       
       */

        /*Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: [
          TextButton(
              onPressed: () {
                MySnackBar("Text Button Pressed", context);
              },
              child: const Text("Text Button")),
          OutlinedButton(
              onPressed: () {
                MySnackBar("Outline Button Pressed", context);
              },
              child: const Text("Outline Button")),
          ElevatedButton(
            onPressed: () {
              //MySnackBar("ElevatedButton Pressed", context);
              MyAlertBox(context);
            },
            // ignore: sort_child_properties_last
            child: const Text("Elevated Button"),
            style: buttonStyle,
          ),
        ],
      ),*/

        /*
       Center(
          child: Image.network(
              "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTDK1o5NqEkRFSX4YZCIwRlaqG6U♂urD_ycTSg&usqp=CAU")),*/
        );
  }
}
